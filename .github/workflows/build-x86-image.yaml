name: Build x86 Image

on:
  pull_request:
    branches:
    - etcdn-dev-1.6*
    paths-ignore:
    - 'docs/**'
  push:
    branches:
    - etcdn-dev-*
    - etcdn-release-*
    paths-ignore:
    - 'docs/**'

jobs:
  build:
    name: Build x86
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: ${{ runner.os }}-go-x86-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-x86-build-

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Unit test
        run: |
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          make ut

      - name: Build
        run: |
          go get -u github.com/securego/gosec/cmd/gosec
          make release
          make tar

      - name: Upload image to artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: image.tar

  push:
    name: push
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: image

      - name: Load Image
        run: |
          docker load --input image.tar

      - name: Push
        if: ${{ contains(github.ref, 'etcdn-release') || contains(github.ref, 'etcdn-dev') }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMMIT: ${{ github.sha }}
        run: |
          cat VERSION
          TAG=$(cat VERSION)
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag kubeovn/kube-ovn:$TAG $DOCKER_USERNAME/kube-ovn:$TAG
          docker images
          docker push $DOCKER_USERNAME/kube-ovn:$TAG
