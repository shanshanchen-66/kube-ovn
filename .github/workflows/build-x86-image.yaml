name: Build x86 Image

on:
  pull_request:
    branches:
    - etcdn-dev-1.6*
    paths-ignore:
    - 'docs/**'
  push:
    branches:
    - etcdn-dev-*
    - etcdn-release-*
    paths-ignore:
    - 'docs/**'

jobs:
  build:
    name: Build x86
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: ${{ runner.os }}-go-x86-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-x86-build-

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Unit test
        run: |
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          make ut

      - name: Build
        run: |
          go get -u github.com/securego/gosec/cmd/gosec
          make release
          make tar

      - name: Upload image to artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: image.tar

  single-e2e:
    needs: build
    name: 1-master-e2e
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Kind
        env:
          KIND_VERSION: v0.9.0
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          sudo mv kind /usr/local/bin

      - name: Init Kind
        run: |
          pip install j2cli --user
          pip install "j2cli[yaml]" --user
          sudo PATH=~/.local/bin:$PATH make kind-init

      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: image

      - name: Install Kube-OVN
        run: |
          docker load --input image.tar
          sudo make kind-install

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Run E2E
        run: |
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          sudo kubectl cluster-info
          sudo chmod 666 /home/runner/.kube/config
          make e2e

  single-node-e2e:
    needs: build
    name: 1-node-e2e
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Kind
        env:
          KIND_VERSION: v0.9.0
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          sudo mv kind /usr/local/bin

      - name: Init Kind
        run: |
          pip install j2cli --user
          pip install "j2cli[yaml]" --user
          sudo PATH=~/.local/bin:$PATH make kind-init-single

      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: image

      - name: Install Kube-OVN
        run: |
          docker load --input image.tar
          sudo make kind-install-single

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Run E2E
        run: |
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          sudo kubectl cluster-info
          sudo chmod 666 /home/runner/.kube/config
          make e2e

  push:
    needs: [single-e2e]
    name: push
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: image

      - name: Load Image
        run: |
          docker load --input image.tar

      - name: Security Scan
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
          make scan


      - name: Push
        if: ${{ contains(github.ref, 'etcdn-release') || contains(github.ref, 'etcdn-dev') }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMMIT: ${{ github.sha }}
        run: |
          cat VERSION
          TAG=$(cat VERSION)
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag kubeovn/kube-ovn:$TAG $DOCKER_USERNAME/kube-ovn:$TAG
          docker images
          docker push $DOCKER_USERNAME/kube-ovn:$TAG
